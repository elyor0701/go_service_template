// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: postgres_permission.proto

package postgres_object_builder_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetAllPermissionRequest) Reset() {
	*x = GetAllPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPermissionRequest) ProtoMessage() {}

func (x *GetAllPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetAllPermissionRequest) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{0}
}

func (x *GetAllPermissionRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetAllPermissionRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetFieldPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	TableSlug string `protobuf:"bytes,2,opt,name=table_slug,json=tableSlug,proto3" json:"table_slug,omitempty"`
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	VersionId string `protobuf:"bytes,4,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
}

func (x *GetFieldPermissionRequest) Reset() {
	*x = GetFieldPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFieldPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFieldPermissionRequest) ProtoMessage() {}

func (x *GetFieldPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFieldPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetFieldPermissionRequest) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{1}
}

func (x *GetFieldPermissionRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetFieldPermissionRequest) GetTableSlug() string {
	if x != nil {
		return x.TableSlug
	}
	return ""
}

func (x *GetFieldPermissionRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetFieldPermissionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type UpsertPermissionsByAppIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App  string           `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Data *structpb.Struct `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpsertPermissionsByAppIdResponse) Reset() {
	*x = UpsertPermissionsByAppIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPermissionsByAppIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPermissionsByAppIdResponse) ProtoMessage() {}

func (x *UpsertPermissionsByAppIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPermissionsByAppIdResponse.ProtoReflect.Descriptor instead.
func (*UpsertPermissionsByAppIdResponse) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertPermissionsByAppIdResponse) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *UpsertPermissionsByAppIdResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpsertPermissionsByAppIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string           `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Data      *structpb.Struct `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	ProjectId string           `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *UpsertPermissionsByAppIdRequest) Reset() {
	*x = UpsertPermissionsByAppIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPermissionsByAppIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPermissionsByAppIdRequest) ProtoMessage() {}

func (x *UpsertPermissionsByAppIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPermissionsByAppIdRequest.ProtoReflect.Descriptor instead.
func (*UpsertPermissionsByAppIdRequest) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertPermissionsByAppIdRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpsertPermissionsByAppIdRequest) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpsertPermissionsByAppIdRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetActionPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	TableSlug string `protobuf:"bytes,2,opt,name=table_slug,json=tableSlug,proto3" json:"table_slug,omitempty"`
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetActionPermissionRequest) Reset() {
	*x = GetActionPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionPermissionRequest) ProtoMessage() {}

func (x *GetActionPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetActionPermissionRequest) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{4}
}

func (x *GetActionPermissionRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetActionPermissionRequest) GetTableSlug() string {
	if x != nil {
		return x.TableSlug
	}
	return ""
}

func (x *GetActionPermissionRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetListWithRoleAppTablePermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	RoleId    string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	VersionId string `protobuf:"bytes,3,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
}

func (x *GetListWithRoleAppTablePermissionsRequest) Reset() {
	*x = GetListWithRoleAppTablePermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListWithRoleAppTablePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListWithRoleAppTablePermissionsRequest) ProtoMessage() {}

func (x *GetListWithRoleAppTablePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListWithRoleAppTablePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetListWithRoleAppTablePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{5}
}

func (x *GetListWithRoleAppTablePermissionsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetListWithRoleAppTablePermissionsRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *GetListWithRoleAppTablePermissionsRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type RoleWithAppTablePermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Guid             string                             `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	ProjectId        string                             `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ClientPlatformId string                             `protobuf:"bytes,4,opt,name=client_platform_id,json=clientPlatformId,proto3" json:"client_platform_id,omitempty"`
	ClientTypeId     string                             `protobuf:"bytes,5,opt,name=client_type_id,json=clientTypeId,proto3" json:"client_type_id,omitempty"`
	Apps             []*RoleWithAppTablePermissions_App `protobuf:"bytes,6,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *RoleWithAppTablePermissions) Reset() {
	*x = RoleWithAppTablePermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions) ProtoMessage() {}

func (x *RoleWithAppTablePermissions) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6}
}

func (x *RoleWithAppTablePermissions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleWithAppTablePermissions) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RoleWithAppTablePermissions) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RoleWithAppTablePermissions) GetClientPlatformId() string {
	if x != nil {
		return x.ClientPlatformId
	}
	return ""
}

func (x *RoleWithAppTablePermissions) GetClientTypeId() string {
	if x != nil {
		return x.ClientTypeId
	}
	return ""
}

func (x *RoleWithAppTablePermissions) GetApps() []*RoleWithAppTablePermissions_App {
	if x != nil {
		return x.Apps
	}
	return nil
}

type GetListWithRoleAppTablePermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                       `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Data      *RoleWithAppTablePermissions `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetListWithRoleAppTablePermissionsResponse) Reset() {
	*x = GetListWithRoleAppTablePermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListWithRoleAppTablePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListWithRoleAppTablePermissionsResponse) ProtoMessage() {}

func (x *GetListWithRoleAppTablePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListWithRoleAppTablePermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetListWithRoleAppTablePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{7}
}

func (x *GetListWithRoleAppTablePermissionsResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetListWithRoleAppTablePermissionsResponse) GetData() *RoleWithAppTablePermissions {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRoleAppTablePermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                       `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Data      *RoleWithAppTablePermissions `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateRoleAppTablePermissionsRequest) Reset() {
	*x = UpdateRoleAppTablePermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleAppTablePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleAppTablePermissionsRequest) ProtoMessage() {}

func (x *UpdateRoleAppTablePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleAppTablePermissionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleAppTablePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRoleAppTablePermissionsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateRoleAppTablePermissionsRequest) GetData() *RoleWithAppTablePermissions {
	if x != nil {
		return x.Data
	}
	return nil
}

type RoleWithAppTablePermissions_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Icon        string                                   `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Id          string                                   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Tables      []*RoleWithAppTablePermissions_App_Table `protobuf:"bytes,5,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *RoleWithAppTablePermissions_App) Reset() {
	*x = RoleWithAppTablePermissions_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0}
}

func (x *RoleWithAppTablePermissions_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App) GetTables() []*RoleWithAppTablePermissions_App_Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type RoleWithAppTablePermissions_App_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label             string                                                           `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Slug              string                                                           `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Description       string                                                           `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ShowInMenu        bool                                                             `protobuf:"varint,4,opt,name=show_in_menu,json=showInMenu,proto3" json:"show_in_menu,omitempty"`
	IsChanged         bool                                                             `protobuf:"varint,5,opt,name=is_changed,json=isChanged,proto3" json:"is_changed,omitempty"`
	Icon              string                                                           `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	SubtitleFieldSlug string                                                           `protobuf:"bytes,7,opt,name=subtitle_field_slug,json=subtitleFieldSlug,proto3" json:"subtitle_field_slug,omitempty"`
	WithIncrementId   bool                                                             `protobuf:"varint,8,opt,name=with_increment_id,json=withIncrementId,proto3" json:"with_increment_id,omitempty"`
	DigitNumber       int32                                                            `protobuf:"varint,9,opt,name=digit_number,json=digitNumber,proto3" json:"digit_number,omitempty"`
	Id                string                                                           `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	RecordPermissions *RoleWithAppTablePermissions_App_Table_RecordPermission          `protobuf:"bytes,11,opt,name=record_permissions,json=recordPermissions,proto3" json:"record_permissions,omitempty"`
	FieldPermissions  []*RoleWithAppTablePermissions_App_Table_FieldPermission         `protobuf:"bytes,12,rep,name=field_permissions,json=fieldPermissions,proto3" json:"field_permissions,omitempty"`
	ViewPermissions   []*RoleWithAppTablePermissions_App_Table_ViewPermission          `protobuf:"bytes,13,rep,name=view_permissions,json=viewPermissions,proto3" json:"view_permissions,omitempty"`
	AutomaticFilters  *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod `protobuf:"bytes,14,opt,name=automatic_filters,json=automaticFilters,proto3" json:"automatic_filters,omitempty"`
	ActionPermissions []*RoleWithAppTablePermissions_App_Table_ActionPermission        `protobuf:"bytes,15,rep,name=action_permissions,json=actionPermissions,proto3" json:"action_permissions,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table) Reset() {
	*x = RoleWithAppTablePermissions_App_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0}
}

func (x *RoleWithAppTablePermissions_App_Table) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table) GetShowInMenu() bool {
	if x != nil {
		return x.ShowInMenu
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table) GetIsChanged() bool {
	if x != nil {
		return x.IsChanged
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table) GetSubtitleFieldSlug() string {
	if x != nil {
		return x.SubtitleFieldSlug
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table) GetWithIncrementId() bool {
	if x != nil {
		return x.WithIncrementId
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table) GetDigitNumber() int32 {
	if x != nil {
		return x.DigitNumber
	}
	return 0
}

func (x *RoleWithAppTablePermissions_App_Table) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table) GetRecordPermissions() *RoleWithAppTablePermissions_App_Table_RecordPermission {
	if x != nil {
		return x.RecordPermissions
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table) GetFieldPermissions() []*RoleWithAppTablePermissions_App_Table_FieldPermission {
	if x != nil {
		return x.FieldPermissions
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table) GetViewPermissions() []*RoleWithAppTablePermissions_App_Table_ViewPermission {
	if x != nil {
		return x.ViewPermissions
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table) GetAutomaticFilters() *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod {
	if x != nil {
		return x.AutomaticFilters
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table) GetActionPermissions() []*RoleWithAppTablePermissions_App_Table_ActionPermission {
	if x != nil {
		return x.ActionPermissions
	}
	return nil
}

type RoleWithAppTablePermissions_App_Table_RecordPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Read            string `protobuf:"bytes,1,opt,name=read,proto3" json:"read,omitempty"`
	Write           string `protobuf:"bytes,2,opt,name=write,proto3" json:"write,omitempty"`
	Update          string `protobuf:"bytes,3,opt,name=update,proto3" json:"update,omitempty"`
	Delete          string `protobuf:"bytes,4,opt,name=delete,proto3" json:"delete,omitempty"`
	Guid            string `protobuf:"bytes,5,opt,name=guid,proto3" json:"guid,omitempty"`
	IsHaveCondition bool   `protobuf:"varint,6,opt,name=is_have_condition,json=isHaveCondition,proto3" json:"is_have_condition,omitempty"`
	IsPublic        bool   `protobuf:"varint,7,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) Reset() {
	*x = RoleWithAppTablePermissions_App_Table_RecordPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table_RecordPermission) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table_RecordPermission.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table_RecordPermission) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0, 0}
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetRead() string {
	if x != nil {
		return x.Read
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetWrite() string {
	if x != nil {
		return x.Write
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetUpdate() string {
	if x != nil {
		return x.Update
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetDelete() string {
	if x != nil {
		return x.Delete
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetIsHaveCondition() bool {
	if x != nil {
		return x.IsHaveCondition
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table_RecordPermission) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type RoleWithAppTablePermissions_App_Table_FieldPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldId        string `protobuf:"bytes,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	Guid           string `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	ViewPermission bool   `protobuf:"varint,3,opt,name=view_permission,json=viewPermission,proto3" json:"view_permission,omitempty"`
	EditPermission bool   `protobuf:"varint,4,opt,name=edit_permission,json=editPermission,proto3" json:"edit_permission,omitempty"`
	Label          string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) Reset() {
	*x = RoleWithAppTablePermissions_App_Table_FieldPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table_FieldPermission) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table_FieldPermission.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table_FieldPermission) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0, 1}
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) GetFieldId() string {
	if x != nil {
		return x.FieldId
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) GetViewPermission() bool {
	if x != nil {
		return x.ViewPermission
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) GetEditPermission() bool {
	if x != nil {
		return x.EditPermission
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table_FieldPermission) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type RoleWithAppTablePermissions_App_Table_ViewPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid           string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Label          string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	RelationId     string `protobuf:"bytes,3,opt,name=relation_id,json=relationId,proto3" json:"relation_id,omitempty"`
	ViewPermission bool   `protobuf:"varint,4,opt,name=view_permission,json=viewPermission,proto3" json:"view_permission,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) Reset() {
	*x = RoleWithAppTablePermissions_App_Table_ViewPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table_ViewPermission) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table_ViewPermission.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table_ViewPermission) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0, 2}
}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) GetRelationId() string {
	if x != nil {
		return x.RelationId
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_ViewPermission) GetViewPermission() bool {
	if x != nil {
		return x.ViewPermission
	}
	return false
}

type RoleWithAppTablePermissions_App_Table_AutomaticFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid        string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	ObjectField string `protobuf:"bytes,2,opt,name=object_field,json=objectField,proto3" json:"object_field,omitempty"`
	CustomField string `protobuf:"bytes,3,opt,name=custom_field,json=customField,proto3" json:"custom_field,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilter) Reset() {
	*x = RoleWithAppTablePermissions_App_Table_AutomaticFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table_AutomaticFilter) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilter) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table_AutomaticFilter.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table_AutomaticFilter) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0, 3}
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilter) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilter) GetObjectField() string {
	if x != nil {
		return x.ObjectField
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilter) GetCustomField() string {
	if x != nil {
		return x.CustomField
	}
	return ""
}

type RoleWithAppTablePermissions_App_Table_ActionPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid          string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	CustomEventId string `protobuf:"bytes,2,opt,name=custom_event_id,json=customEventId,proto3" json:"custom_event_id,omitempty"`
	Permission    bool   `protobuf:"varint,3,opt,name=permission,proto3" json:"permission,omitempty"`
	Label         string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) Reset() {
	*x = RoleWithAppTablePermissions_App_Table_ActionPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table_ActionPermission) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table_ActionPermission.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table_ActionPermission) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0, 4}
}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) GetCustomEventId() string {
	if x != nil {
		return x.CustomEventId
	}
	return ""
}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) GetPermission() bool {
	if x != nil {
		return x.Permission
	}
	return false
}

func (x *RoleWithAppTablePermissions_App_Table_ActionPermission) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Read   []*RoleWithAppTablePermissions_App_Table_AutomaticFilter `protobuf:"bytes,1,rep,name=read,proto3" json:"read,omitempty"`
	Write  []*RoleWithAppTablePermissions_App_Table_AutomaticFilter `protobuf:"bytes,2,rep,name=write,proto3" json:"write,omitempty"`
	Update []*RoleWithAppTablePermissions_App_Table_AutomaticFilter `protobuf:"bytes,3,rep,name=update,proto3" json:"update,omitempty"`
	Delete []*RoleWithAppTablePermissions_App_Table_AutomaticFilter `protobuf:"bytes,4,rep,name=delete,proto3" json:"delete,omitempty"`
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) Reset() {
	*x = RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postgres_permission_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) ProtoMessage() {}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) ProtoReflect() protoreflect.Message {
	mi := &file_postgres_permission_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod.ProtoReflect.Descriptor instead.
func (*RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) Descriptor() ([]byte, []int) {
	return file_postgres_permission_proto_rawDescGZIP(), []int{6, 0, 0, 5}
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) GetRead() []*RoleWithAppTablePermissions_App_Table_AutomaticFilter {
	if x != nil {
		return x.Read
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) GetWrite() []*RoleWithAppTablePermissions_App_Table_AutomaticFilter {
	if x != nil {
		return x.Write
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) GetUpdate() []*RoleWithAppTablePermissions_App_Table_AutomaticFilter {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod) GetDelete() []*RoleWithAppTablePermissions_App_Table_AutomaticFilter {
	if x != nil {
		return x.Delete
	}
	return nil
}

var File_postgres_permission_proto protoreflect.FileDescriptor

var file_postgres_permission_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x20, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01, 0x0a, 0x1f,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x22, 0x73, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xff, 0x14, 0x0a,
	0x1b, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x1a, 0xee, 0x12,
	0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x5e, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x46, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x1a,
	0xac, 0x11, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e,
	0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f,
	0x77, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69,
	0x67, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x10, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70,
	0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x76, 0x69, 0x65, 0x77,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8d, 0x01, 0x0a, 0x11,
	0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x60, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x86, 0x01, 0x0a, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x57, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xc9, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x68, 0x61,
	0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x48, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x1a, 0xa8, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x76, 0x69,
	0x65, 0x77, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x1a, 0x84, 0x01, 0x0a, 0x0e,
	0x56, 0x69, 0x65, 0x77, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x76, 0x69, 0x65, 0x77, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x6b, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a,
	0x84, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x1a, 0xd5, 0x03, 0x0a, 0x19, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x6a, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x56, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x6c, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x56, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x6e,
	0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6e,
	0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x56,
	0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x9d,
	0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97,
	0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa2, 0x08, 0x0a, 0x11, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa1,
	0x01, 0x0a, 0x18, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x40, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x38, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0xbf, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4a, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_postgres_permission_proto_rawDescOnce sync.Once
	file_postgres_permission_proto_rawDescData = file_postgres_permission_proto_rawDesc
)

func file_postgres_permission_proto_rawDescGZIP() []byte {
	file_postgres_permission_proto_rawDescOnce.Do(func() {
		file_postgres_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_postgres_permission_proto_rawDescData)
	})
	return file_postgres_permission_proto_rawDescData
}

var file_postgres_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_postgres_permission_proto_goTypes = []interface{}{
	(*GetAllPermissionRequest)(nil),                                         // 0: postgres_object_builder_service.GetAllPermissionRequest
	(*GetFieldPermissionRequest)(nil),                                       // 1: postgres_object_builder_service.GetFieldPermissionRequest
	(*UpsertPermissionsByAppIdResponse)(nil),                                // 2: postgres_object_builder_service.UpsertPermissionsByAppIdResponse
	(*UpsertPermissionsByAppIdRequest)(nil),                                 // 3: postgres_object_builder_service.UpsertPermissionsByAppIdRequest
	(*GetActionPermissionRequest)(nil),                                      // 4: postgres_object_builder_service.GetActionPermissionRequest
	(*GetListWithRoleAppTablePermissionsRequest)(nil),                       // 5: postgres_object_builder_service.GetListWithRoleAppTablePermissionsRequest
	(*RoleWithAppTablePermissions)(nil),                                     // 6: postgres_object_builder_service.RoleWithAppTablePermissions
	(*GetListWithRoleAppTablePermissionsResponse)(nil),                      // 7: postgres_object_builder_service.GetListWithRoleAppTablePermissionsResponse
	(*UpdateRoleAppTablePermissionsRequest)(nil),                            // 8: postgres_object_builder_service.UpdateRoleAppTablePermissionsRequest
	(*RoleWithAppTablePermissions_App)(nil),                                 // 9: postgres_object_builder_service.RoleWithAppTablePermissions.App
	(*RoleWithAppTablePermissions_App_Table)(nil),                           // 10: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table
	(*RoleWithAppTablePermissions_App_Table_RecordPermission)(nil),          // 11: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.RecordPermission
	(*RoleWithAppTablePermissions_App_Table_FieldPermission)(nil),           // 12: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.FieldPermission
	(*RoleWithAppTablePermissions_App_Table_ViewPermission)(nil),            // 13: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.ViewPermission
	(*RoleWithAppTablePermissions_App_Table_AutomaticFilter)(nil),           // 14: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilter
	(*RoleWithAppTablePermissions_App_Table_ActionPermission)(nil),          // 15: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.ActionPermission
	(*RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod)(nil), // 16: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilterWithMethod
	(*structpb.Struct)(nil),                                                 // 17: google.protobuf.Struct
	(*CommonMessage)(nil),                                                   // 18: postgres_object_builder_service.CommonMessage
	(*emptypb.Empty)(nil),                                                   // 19: google.protobuf.Empty
}
var file_postgres_permission_proto_depIdxs = []int32{
	17, // 0: postgres_object_builder_service.UpsertPermissionsByAppIdResponse.data:type_name -> google.protobuf.Struct
	17, // 1: postgres_object_builder_service.UpsertPermissionsByAppIdRequest.data:type_name -> google.protobuf.Struct
	9,  // 2: postgres_object_builder_service.RoleWithAppTablePermissions.apps:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App
	6,  // 3: postgres_object_builder_service.GetListWithRoleAppTablePermissionsResponse.data:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions
	6,  // 4: postgres_object_builder_service.UpdateRoleAppTablePermissionsRequest.data:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions
	10, // 5: postgres_object_builder_service.RoleWithAppTablePermissions.App.tables:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table
	11, // 6: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.record_permissions:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.RecordPermission
	12, // 7: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.field_permissions:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.FieldPermission
	13, // 8: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.view_permissions:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.ViewPermission
	16, // 9: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.automatic_filters:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilterWithMethod
	15, // 10: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.action_permissions:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.ActionPermission
	14, // 11: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilterWithMethod.read:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilter
	14, // 12: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilterWithMethod.write:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilter
	14, // 13: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilterWithMethod.update:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilter
	14, // 14: postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilterWithMethod.delete:type_name -> postgres_object_builder_service.RoleWithAppTablePermissions.App.Table.AutomaticFilter
	3,  // 15: postgres_object_builder_service.PermissionService.UpsertPermissionsByAppId:input_type -> postgres_object_builder_service.UpsertPermissionsByAppIdRequest
	0,  // 16: postgres_object_builder_service.PermissionService.GetAllPermissionsByRoleId:input_type -> postgres_object_builder_service.GetAllPermissionRequest
	1,  // 17: postgres_object_builder_service.PermissionService.GetFieldPermissions:input_type -> postgres_object_builder_service.GetFieldPermissionRequest
	4,  // 18: postgres_object_builder_service.PermissionService.GetActionPermissions:input_type -> postgres_object_builder_service.GetActionPermissionRequest
	4,  // 19: postgres_object_builder_service.PermissionService.GetViewRelationPermissions:input_type -> postgres_object_builder_service.GetActionPermissionRequest
	5,  // 20: postgres_object_builder_service.PermissionService.GetListWithRoleAppTablePermissions:input_type -> postgres_object_builder_service.GetListWithRoleAppTablePermissionsRequest
	8,  // 21: postgres_object_builder_service.PermissionService.UpdateRoleAppTablePermissions:input_type -> postgres_object_builder_service.UpdateRoleAppTablePermissionsRequest
	2,  // 22: postgres_object_builder_service.PermissionService.UpsertPermissionsByAppId:output_type -> postgres_object_builder_service.UpsertPermissionsByAppIdResponse
	18, // 23: postgres_object_builder_service.PermissionService.GetAllPermissionsByRoleId:output_type -> postgres_object_builder_service.CommonMessage
	18, // 24: postgres_object_builder_service.PermissionService.GetFieldPermissions:output_type -> postgres_object_builder_service.CommonMessage
	18, // 25: postgres_object_builder_service.PermissionService.GetActionPermissions:output_type -> postgres_object_builder_service.CommonMessage
	18, // 26: postgres_object_builder_service.PermissionService.GetViewRelationPermissions:output_type -> postgres_object_builder_service.CommonMessage
	7,  // 27: postgres_object_builder_service.PermissionService.GetListWithRoleAppTablePermissions:output_type -> postgres_object_builder_service.GetListWithRoleAppTablePermissionsResponse
	19, // 28: postgres_object_builder_service.PermissionService.UpdateRoleAppTablePermissions:output_type -> google.protobuf.Empty
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_postgres_permission_proto_init() }
func file_postgres_permission_proto_init() {
	if File_postgres_permission_proto != nil {
		return
	}
	file_postgres_object_builder_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_postgres_permission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFieldPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPermissionsByAppIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertPermissionsByAppIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActionPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListWithRoleAppTablePermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListWithRoleAppTablePermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleAppTablePermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table_RecordPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table_FieldPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table_ViewPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table_AutomaticFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table_ActionPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postgres_permission_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleWithAppTablePermissions_App_Table_AutomaticFilterWithMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_postgres_permission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_postgres_permission_proto_goTypes,
		DependencyIndexes: file_postgres_permission_proto_depIdxs,
		MessageInfos:      file_postgres_permission_proto_msgTypes,
	}.Build()
	File_postgres_permission_proto = out.File
	file_postgres_permission_proto_rawDesc = nil
	file_postgres_permission_proto_goTypes = nil
	file_postgres_permission_proto_depIdxs = nil
}
